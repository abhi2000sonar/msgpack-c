1- Always compile at the highest warning level possible: A lot of bugs can be avoided by paying attention to compiler diagnostics

2- Code that is not used (commented out) shall be deleted

3-If you can exit a function early, you should: Early exits out of a function, specially through guard clauses at the top of a function are preferred since they simplify the logic further down in the function.

4- Avoid methods with too many local variables: Methods where NbVariables > 8 are hard to understand and maintain. Methods where NbVariables > 15 are extremely complex and must be refactored

5- Avoid types with too many fields: Types where fields count > 20   might be hard to understand and maintain but there might be cases where it is relevant to have a high number of fields.

6- Avoid types with too many methods: Types where methods count > 20 might be hard to  understand and maintain but there might be cases where it is relevant to have a high number of methods.

7- Avoid too big types

8- Avoid too complex methods

9- Avoid methods with too many parameters

10- Avoid too big methods
